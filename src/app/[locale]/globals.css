@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  body {
    /*padding-left: calc(100vw - 100%); it centralize the content but does not work with react-remove-scroll*/
    min-height: 101vh;
    @apply font-sans antialiased
  }

  * {
    @apply border-stone-200 dark:border-stone-600
  }
}


@layer utilities {
  @media (min-width: 768px) {
    .underline-fade {
      position: relative;

      &::after {
        content: '';
        display: block;
        position: absolute;
        bottom: 0;
        width: 100%;
        height: 2px;
        background: color-mix(in srgb, currentColor 60%, transparent);
        opacity: 0;
        transition: all 0.15s ease-in-out;
      }

      &.underline-fade-selected::after {
        background: color-mix(in srgb, currentColor 60%, transparent);
        opacity: 1;
      }

      &:hover::after, .group:hover &.underline-fade-with-group::after {
        background: currentColor;
        opacity: 1;
      }
    }
  }

  .animate-delay-in {
    animation-name: in;
    animation-duration: 0.6s;
    animation-delay: calc(var(--index-mobile) * 130ms);
    animation-fill-mode: both;
  }

  @media (min-width: 768px) {
    .animate-delay-in {
      animation-delay: calc(var(--index) * 130ms);
    }
  }

  @keyframes in {
    from {
      opacity: 0;
      transform: translateY(18px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Ref. https://play.tailwindcss.com/zQftpiBCmf */
  /*@variants responsive {*/
  /* Hide scrollbar for Chrome, Safari and Opera */
  .scrollbar-0::-webkit-scrollbar {
    display: none;
  }

  /* Hide scrollbar for IE, Edge and Firefox */
  .scrollbar-0 {
    -ms-overflow-style: none; /* IE and Edge */
    scrollbar-width: none; /* Firefox */
  }

  /*}*/
  .no-transition {
    transition: none !important;
  }

  :root {
    --color-book-1: #a6e4cd;
    --color-book-2: #7ac7c4;
    --color-book-3: #317471;
    --color-movie-1: theme("colors.sky.300");
    --color-movie-2: theme("colors.sky.500");
    --color-movie-3: theme("colors.sky.700");
    --color-book-movie-sep: #ebebeb;
  }

  :root.dark {
    --color-book-1: #206b4f;
    --color-book-2: #429d99;
    --color-book-3: #6dc2be;
    --color-movie-1: theme("colors.sky.800");
    --color-movie-2: theme("colors.sky.600");
    --color-movie-3: theme("colors.sky.500");
    --color-book-movie-sep: #333;
  }
}


/*<div className="menu-button">*/
/*  <label htmlFor="menu-button-check">*/
/*    <input type="checkbox" id="menu-button-check" className="hidden"/>*/
/*    <span className="top mb-auto justify-start"></span>*/
/*    <span className="middle my-auto justify-center"></span>*/
/*    <span className="bottom mt-auto justify-end"></span>*/
/*  </label>*/
/*</div>*/
/*.menu-button {*/
/*  @apply w-10 h-10 px-2 py-2.5;*/

/*  & label {*/
/*    @apply h-full;*/
/*    display: flex;*/
/*    flex-direction: column;*/
/*    cursor: pointer;*/
/*  }*/

/*  & span {*/
/*    @apply w-full shrink-0;*/
/*    height: 2px;*/
/*    background: currentColor;*/
/*    border-radius: 100px;*/
/*    display: inline-block;*/
/*    transition: 0.3s ease;*/
/*  }*/

/*  &:has(input[type]:checked) span.top {*/
/*    transform: rotate(47deg) scaleX(1.1);*/
/*    transform-origin: 1px 0;*/
/*  }*/

/*  &:has(input[type]:checked) span.bottom {*/
/*    transform: rotate(-47deg) scaleX(1.1);*/
/*    transform-origin: bottom left;*/
/*  }*/

/*  &:has(input[type]:checked) span.middle {*/
/*    transform: translateX(-20px);*/
/*    opacity: 0;*/
/*  }*/
/*}*/

::view-transition-old(root), .dark::view-transition-old(root) {
  animation: none;
}

::view-transition-new(root) {
  animation: reveal-light .5s cubic-bezier(.11, 0, 1, -0.02);
}

.dark::view-transition-new(root) {
  animation: reveal-dark .5s cubic-bezier(.11, 0, 1, -0.02);
}

@keyframes reveal-dark {
  from {
    clip-path: circle(0% at var(--ripple-x) var(--ripple-y));
  }
  to {
    clip-path: circle(150% at var(--ripple-x) var(--ripple-y));
  }
}

@keyframes reveal-light {
  from {
    clip-path: circle(0% at var(--ripple-x) var(--ripple-y));
  }
  to {
    clip-path: circle(150% at var(--ripple-x) var(--ripple-y));
  }
}
